version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-userdb
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: hels
      POSTGRES_PASSWORD: hels
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./base_de_donnees/gestion_utilisateur.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hels -d user_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: gestion-utilisateur-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_db
      SPRING_DATASOURCE_USERNAME: hels
      SPRING_DATASOURCE_PASSWORD: hels
      JWT_SECRET: ${JWT_SECRET:-Y7zQ5V0gP2wX4cH8aF1jB9kL7nM6oR3sT2uV1eZ0yW9xC8cD7fE6gH5iJ4kL3mN2oP1qR0sT9uV8wX7yZ6aB5cD4eF3gH2iJ1kL0mN9oP8qR7sT6uV5wX4yZ3aB2cD1eF0gH}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge